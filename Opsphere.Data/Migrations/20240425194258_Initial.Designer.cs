// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Opsphere.Data;

#nullable disable

namespace Opsphere.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240425194258_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DeveloperProject", b =>
                {
                    b.Property<int>("DevelopersId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectsProjectId")
                        .HasColumnType("int");

                    b.HasKey("DevelopersId", "ProjectsProjectId");

                    b.HasIndex("ProjectsProjectId");

                    b.ToTable("DeveloperProject");
                });

            modelBuilder.Entity("Opsphere.Data.Models.Card", b =>
                {
                    b.Property<int>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CardId"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DeveloperId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TeamLeaderId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CardId");

                    b.HasIndex("DeveloperId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TeamLeaderId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Opsphere.Data.Models.Developer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Developers");
                });

            modelBuilder.Entity("Opsphere.Data.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<int?>("TeamLeaderId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId");

                    b.HasIndex("TeamLeaderId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Opsphere.Data.Models.TeamLeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TeamLeaders");
                });

            modelBuilder.Entity("DeveloperProject", b =>
                {
                    b.HasOne("Opsphere.Data.Models.Developer", null)
                        .WithMany()
                        .HasForeignKey("DevelopersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Opsphere.Data.Models.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Opsphere.Data.Models.Card", b =>
                {
                    b.HasOne("Opsphere.Data.Models.Developer", "Developer")
                        .WithMany("Cards")
                        .HasForeignKey("DeveloperId");

                    b.HasOne("Opsphere.Data.Models.Project", "Project")
                        .WithMany("Cards")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Opsphere.Data.Models.TeamLeader", "TeamLeader")
                        .WithMany("Cards")
                        .HasForeignKey("TeamLeaderId");

                    b.Navigation("Developer");

                    b.Navigation("Project");

                    b.Navigation("TeamLeader");
                });

            modelBuilder.Entity("Opsphere.Data.Models.Project", b =>
                {
                    b.HasOne("Opsphere.Data.Models.TeamLeader", "TeamLeader")
                        .WithMany("Projects")
                        .HasForeignKey("TeamLeaderId");

                    b.Navigation("TeamLeader");
                });

            modelBuilder.Entity("Opsphere.Data.Models.Developer", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Opsphere.Data.Models.Project", b =>
                {
                    b.Navigation("Cards");
                });

            modelBuilder.Entity("Opsphere.Data.Models.TeamLeader", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("Projects");
                });
#pragma warning restore 612, 618
        }
    }
}
